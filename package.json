{
  "name": "@asyncapi/java-spring-cloud-stream-template",
  "version": "0.6.3",
  "description": "Java Spring Cloud Stream template for AsyncAPI generator.",
  "scripts": {
    "release": "semantic-release",
    "lint": "eslint --config .eslintrc .",
    "lint-fix": "eslint --fix --config .eslintrc .",
    "get-version": "echo $npm_package_version"
  },
  "keywords": [
    "asyncapi",
    "cloud",
    "generator",
    "java",
    "spring",
    "template"
  ],
  "publishConfig": {
    "access": "public"
  },
  "author": "Michael Davis <michael@damaru.com>",
  "license": "Apache-2.0",
  "dependencies": {
    "@asyncapi/generator-filters": "^1.0.0",
    "js-yaml": "^3.13.1",
    "lodash": "^4.17.15"
  },
  "devDependencies": {
    "@semantic-release/commit-analyzer": "^8.0.1",
    "@semantic-release/github": "^7.0.4",
    "@semantic-release/npm": "^7.0.3",
    "@semantic-release/release-notes-generator": "^9.0.1",
    "conventional-changelog-conventionalcommits": "^4.2.3",
    "eslint": "^6.8.0",
    "semantic-release": "^17.0.7"
  },
  "release": {
    "branches": [
      "master"
    ],
    "plugins": [
      [
        "@semantic-release/commit-analyzer",
        {
          "preset": "conventionalcommits"
        }
      ],
      [
        "@semantic-release/release-notes-generator",
        {
          "preset": "conventionalcommits"
        }
      ],
      "@semantic-release/npm",
      "@semantic-release/github"
    ]
  },
  "generator": {
    "generator": ">=0.50.0 <2.0.0",
    "parameters": {
      "actuator": {
        "description": "If present, it adds the dependencies for spring-boot-starter-web, spring-boot-starter-actuator and micrometer-registry-prometheus.",
        "required": false
      },
      "artifactId": {
        "description": "The Maven artifact id. Alternatively you can set the specification extension info.x-artifact-id",
        "required": false
      },
      "artifactType": {
        "description": "The type of project to generate, application or library. The default is library. When generating an application, the pom.xml file will contain the complete set of dependencies required to run an app, and it will contain an Application class with a main function. Otherwise the pom file will include only the dependencies required to compile a library.",
        "required": false
      },
      "binder": {
        "description": "The name of the binder implementation, one of kafka, rabbit or solace. Default: kafka. If you need other binders to be supported, please let us know!",
        "required": false
      },
      "generateMessagingClass": {
        "description": "By default the Messaging.java class is generated. If you don't want it, set this parameter to 'false'.",
        "required": false
      },
      "groupId": {
        "description": "The Maven group id. Alternatively you can set the specification extension info.x-group-id",
        "required": false
      },
      "host": {
        "description": "The host connection property. Currently this only works with the Solace binder. Example: tcp://myhost.com:55555.",
        "required": false
      },
      "javaPackage": {
        "description": "The Java package of the generated classes. Alternatively you can set the specification extension info.x-java-package",
        "required": false
      },
      "msgVpn": {
        "description": "The message vpn connection property. Currently this only works with the Solace binder.",
        "required": false
      },
      "password": {
        "description": "The client password connection property. Currently this only works with the Solace binder.",
        "required": false
      },
      "reactive": {
        "description": "If true, this will generate reactive style functions using the Flux class. Defalt: false.",
        "required": false
      },
      "solaceSpringCloudVersion": {
        "description": "The version of the solace-spring-cloud-bom dependency used when generating an application. Alternatively you can set the specification extension info.x-solace-spring-cloud-version.",
        "required": false
      },
      "springBootVersion": {
        "description": "The version of Spring Boot used when generating an application. Alternatively you can set the specification extension info.x-spring-booot-version. Example: 2.2.6.RELEASE.",
        "required": false
      },
      "springCloudVersion": {
        "description": "The version of the spring-cloud-dependencies BOM dependency used when generating an application. Alternatively you can set the specification extension info.x-spring-cloud-version. Example: Hoxton.RELEASE.",
        "required": false
      },
      "springCloudStreamVersion": {
        "description": "The version of the spring-cloud-stream dependency specified in the Maven file, when generating a library. When generating an application, the spring-cloud-dependencies BOM is used instead. Example: 3.0.1.RELEASE",
        "required": false
      },
      "username": {
        "description": "The client username connection property. Currently this only works with the Solace binder",
        "required": false
      },
      "view": {
        "description": "The view that the template uses. By default it is the client view, which means that when the document says publish, we subscribe. In the case of the provider view, when the document says publish, we publish. Values are client or provider. The default is client.",
        "required": false
      }
    },
    "filters": [
      "@asyncapi/generator-filters"
    ]
  }
}
